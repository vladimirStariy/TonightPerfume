// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TonightPerfume.Data;

#nullable disable

namespace TonightPerfume.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231206073701_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProductAromaGroups", b =>
                {
                    b.Property<uint>("AromaGroupsAromaGroup_ID")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("ProductsProduct_ID")
                        .HasColumnType("int unsigned");

                    b.HasKey("AromaGroupsAromaGroup_ID", "ProductsProduct_ID");

                    b.HasIndex("ProductsProduct_ID");

                    b.ToTable("ProductAromaGroups");
                });

            modelBuilder.Entity("ProductNotes", b =>
                {
                    b.Property<uint>("PerfumeNotesNote_ID")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("ProductsProduct_ID")
                        .HasColumnType("int unsigned");

                    b.HasKey("PerfumeNotesNote_ID", "ProductsProduct_ID");

                    b.HasIndex("ProductsProduct_ID");

                    b.ToTable("ProductNotes");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Adress", b =>
                {
                    b.Property<uint>("Adress_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Appartaments")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<int>("DeliveryType")
                        .HasColumnType("int");

                    b.Property<int?>("DomophoneCode")
                        .HasColumnType("int");

                    b.Property<int?>("Entrance")
                        .HasColumnType("int");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PostNumber")
                        .HasColumnType("longtext");

                    b.Property<uint>("Profile_ID")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.HasKey("Adress_ID");

                    b.HasIndex("Profile_ID");

                    b.ToTable("Adresses", (string)null);
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.AromaGroup", b =>
                {
                    b.Property<uint>("AromaGroup_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("AromaGroup_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AromaGroup_ID");

                    b.ToTable("AromaGroups", (string)null);

                    b.HasData(
                        new
                        {
                            AromaGroup_ID = 1u,
                            AromaGroup_Name = "акватические"
                        },
                        new
                        {
                            AromaGroup_ID = 2u,
                            AromaGroup_Name = "альдегидные"
                        },
                        new
                        {
                            AromaGroup_ID = 3u,
                            AromaGroup_Name = "ароматические"
                        },
                        new
                        {
                            AromaGroup_ID = 4u,
                            AromaGroup_Name = "водяные"
                        },
                        new
                        {
                            AromaGroup_ID = 5u,
                            AromaGroup_Name = "восточные"
                        },
                        new
                        {
                            AromaGroup_ID = 6u,
                            AromaGroup_Name = "гурманские"
                        },
                        new
                        {
                            AromaGroup_ID = 7u,
                            AromaGroup_Name = "древесные"
                        },
                        new
                        {
                            AromaGroup_ID = 8u,
                            AromaGroup_Name = "зеленые"
                        },
                        new
                        {
                            AromaGroup_ID = 9u,
                            AromaGroup_Name = "кожаные"
                        },
                        new
                        {
                            AromaGroup_ID = 10u,
                            AromaGroup_Name = "мускусные"
                        },
                        new
                        {
                            AromaGroup_ID = 11u,
                            AromaGroup_Name = "пряные"
                        },
                        new
                        {
                            AromaGroup_ID = 12u,
                            AromaGroup_Name = "пудровые"
                        },
                        new
                        {
                            AromaGroup_ID = 13u,
                            AromaGroup_Name = "свежие"
                        },
                        new
                        {
                            AromaGroup_ID = 14u,
                            AromaGroup_Name = "табачные"
                        },
                        new
                        {
                            AromaGroup_ID = 15u,
                            AromaGroup_Name = "фруктовые"
                        },
                        new
                        {
                            AromaGroup_ID = 16u,
                            AromaGroup_Name = "фужерные"
                        },
                        new
                        {
                            AromaGroup_ID = 17u,
                            AromaGroup_Name = "цветочные"
                        },
                        new
                        {
                            AromaGroup_ID = 18u,
                            AromaGroup_Name = "цитрусовые"
                        },
                        new
                        {
                            AromaGroup_ID = 19u,
                            AromaGroup_Name = "шипровые"
                        },
                        new
                        {
                            AromaGroup_ID = 20u,
                            AromaGroup_Name = "экзотические"
                        });
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.AtomizerColor", b =>
                {
                    b.Property<uint>("AtomizerColor_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("Volume_ID")
                        .HasColumnType("int unsigned");

                    b.HasKey("AtomizerColor_ID");

                    b.HasIndex("Volume_ID");

                    b.ToTable("AtomizerColors", (string)null);

                    b.HasData(
                        new
                        {
                            AtomizerColor_ID = 1u,
                            Color = "black",
                            Volume_ID = 1u
                        },
                        new
                        {
                            AtomizerColor_ID = 2u,
                            Color = "pink",
                            Volume_ID = 1u
                        },
                        new
                        {
                            AtomizerColor_ID = 3u,
                            Color = "gold",
                            Volume_ID = 1u
                        },
                        new
                        {
                            AtomizerColor_ID = 4u,
                            Color = "blue",
                            Volume_ID = 1u
                        },
                        new
                        {
                            AtomizerColor_ID = 5u,
                            Color = "red",
                            Volume_ID = 1u
                        },
                        new
                        {
                            AtomizerColor_ID = 6u,
                            Color = "grey",
                            Volume_ID = 1u
                        },
                        new
                        {
                            AtomizerColor_ID = 7u,
                            Color = "black",
                            Volume_ID = 2u
                        },
                        new
                        {
                            AtomizerColor_ID = 8u,
                            Color = "pink",
                            Volume_ID = 2u
                        },
                        new
                        {
                            AtomizerColor_ID = 9u,
                            Color = "gold",
                            Volume_ID = 2u
                        },
                        new
                        {
                            AtomizerColor_ID = 10u,
                            Color = "blue",
                            Volume_ID = 2u
                        },
                        new
                        {
                            AtomizerColor_ID = 11u,
                            Color = "red",
                            Volume_ID = 2u
                        },
                        new
                        {
                            AtomizerColor_ID = 12u,
                            Color = "grey",
                            Volume_ID = 2u
                        },
                        new
                        {
                            AtomizerColor_ID = 13u,
                            Color = "black",
                            Volume_ID = 3u
                        },
                        new
                        {
                            AtomizerColor_ID = 14u,
                            Color = "pink",
                            Volume_ID = 3u
                        },
                        new
                        {
                            AtomizerColor_ID = 15u,
                            Color = "gold",
                            Volume_ID = 3u
                        },
                        new
                        {
                            AtomizerColor_ID = 16u,
                            Color = "blue",
                            Volume_ID = 3u
                        },
                        new
                        {
                            AtomizerColor_ID = 17u,
                            Color = "red",
                            Volume_ID = 3u
                        },
                        new
                        {
                            AtomizerColor_ID = 18u,
                            Color = "grey",
                            Volume_ID = 3u
                        },
                        new
                        {
                            AtomizerColor_ID = 19u,
                            Color = "black",
                            Volume_ID = 4u
                        },
                        new
                        {
                            AtomizerColor_ID = 20u,
                            Color = "pink",
                            Volume_ID = 4u
                        },
                        new
                        {
                            AtomizerColor_ID = 21u,
                            Color = "gold",
                            Volume_ID = 4u
                        },
                        new
                        {
                            AtomizerColor_ID = 22u,
                            Color = "blue",
                            Volume_ID = 4u
                        },
                        new
                        {
                            AtomizerColor_ID = 23u,
                            Color = "red",
                            Volume_ID = 4u
                        },
                        new
                        {
                            AtomizerColor_ID = 24u,
                            Color = "grey",
                            Volume_ID = 4u
                        },
                        new
                        {
                            AtomizerColor_ID = 25u,
                            Color = "black",
                            Volume_ID = 5u
                        },
                        new
                        {
                            AtomizerColor_ID = 26u,
                            Color = "pink",
                            Volume_ID = 5u
                        },
                        new
                        {
                            AtomizerColor_ID = 27u,
                            Color = "gold",
                            Volume_ID = 5u
                        },
                        new
                        {
                            AtomizerColor_ID = 28u,
                            Color = "blue",
                            Volume_ID = 5u
                        },
                        new
                        {
                            AtomizerColor_ID = 29u,
                            Color = "red",
                            Volume_ID = 5u
                        },
                        new
                        {
                            AtomizerColor_ID = 30u,
                            Color = "grey",
                            Volume_ID = 5u
                        });
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.BaseUser", b =>
                {
                    b.Property<uint>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("User_ID");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Brand", b =>
                {
                    b.Property<uint>("Brand_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Brand_ID");

                    b.ToTable("Brands", (string)null);

                    b.HasData(
                        new
                        {
                            Brand_ID = 1u,
                            Name = "Zarkoperfume"
                        },
                        new
                        {
                            Brand_ID = 2u,
                            Name = "Montale"
                        },
                        new
                        {
                            Brand_ID = 3u,
                            Name = "Kenzo"
                        },
                        new
                        {
                            Brand_ID = 4u,
                            Name = "Mancera"
                        },
                        new
                        {
                            Brand_ID = 5u,
                            Name = "Attar Collection"
                        },
                        new
                        {
                            Brand_ID = 6u,
                            Name = "Escentric Molecules"
                        },
                        new
                        {
                            Brand_ID = 7u,
                            Name = "Hermes"
                        },
                        new
                        {
                            Brand_ID = 8u,
                            Name = "Parfums de Marly"
                        },
                        new
                        {
                            Brand_ID = 9u,
                            Name = "YSL"
                        },
                        new
                        {
                            Brand_ID = 10u,
                            Name = "Tiziana Terenzi"
                        },
                        new
                        {
                            Brand_ID = 11u,
                            Name = "Jo Malone"
                        },
                        new
                        {
                            Brand_ID = 12u,
                            Name = "Byredo Parfums"
                        },
                        new
                        {
                            Brand_ID = 13u,
                            Name = "Acqua di Parma"
                        },
                        new
                        {
                            Brand_ID = 14u,
                            Name = "Thomas Kosmala"
                        },
                        new
                        {
                            Brand_ID = 15u,
                            Name = "Dior"
                        },
                        new
                        {
                            Brand_ID = 16u,
                            Name = "Nishane"
                        },
                        new
                        {
                            Brand_ID = 17u,
                            Name = "Sospiro"
                        },
                        new
                        {
                            Brand_ID = 18u,
                            Name = "Cartier"
                        },
                        new
                        {
                            Brand_ID = 19u,
                            Name = "EX Nihilo"
                        },
                        new
                        {
                            Brand_ID = 20u,
                            Name = "Tom Ford"
                        });
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Category", b =>
                {
                    b.Property<uint>("Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Category_ID");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Category_ID = 1u,
                            Name = "Для него"
                        },
                        new
                        {
                            Category_ID = 2u,
                            Name = "Для неё"
                        },
                        new
                        {
                            Category_ID = 3u,
                            Name = "Унисекс"
                        },
                        new
                        {
                            Category_ID = 4u,
                            Name = "Аромабокс"
                        });
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Discount", b =>
                {
                    b.Property<uint>("Discount_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("Brand_ID")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Discount_Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint?>("Product_ID")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("User_ID")
                        .HasColumnType("int unsigned");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Discount_ID");

                    b.HasIndex("Brand_ID");

                    b.HasIndex("Product_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Discounts", (string)null);
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Favorite", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Product_ID")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("User_ID")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.ToTable("Favorites", (string)null);
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Order", b =>
                {
                    b.Property<uint>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Appartaments")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("DeliveryType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("DomophoneCode")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int?>("Entrance")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("OrderCompleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Order_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("PostNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Promocode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<int?>("SummaryPrice")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<uint?>("User_ID")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isNew")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Order_ID");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.OrderProduct", b =>
                {
                    b.Property<uint>("OrderProduct_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Order_ID")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Price_ID")
                        .HasColumnType("int unsigned");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderProduct_Id");

                    b.HasIndex("Order_ID");

                    b.HasIndex("Price_ID");

                    b.ToTable("OrderProducts", (string)null);
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.PerfumeNote", b =>
                {
                    b.Property<uint>("Note_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Note_ID");

                    b.ToTable("PerfumeNotes", (string)null);

                    b.HasData(
                        new
                        {
                            Note_ID = 1u,
                            Name = "абрикос",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 2u,
                            Name = "акваль",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 3u,
                            Name = "акигалавуд",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 4u,
                            Name = "альдегиды",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 5u,
                            Name = "амбра",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 6u,
                            Name = "амбретта",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 7u,
                            Name = "амброксан",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 8u,
                            Name = "ананас",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 9u,
                            Name = "ангелика",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 10u,
                            Name = "анис",
                            Type = "upper"
                        },
                        new
                        {
                            Note_ID = 11u,
                            Name = "апельсин",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 12u,
                            Name = "артемизия",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 13u,
                            Name = "базилик",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 14u,
                            Name = "бальзам",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 15u,
                            Name = "бамбук",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 16u,
                            Name = "бархатцы",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 17u,
                            Name = "бензоин",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 18u,
                            Name = "бергамот",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 19u,
                            Name = "береза",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 20u,
                            Name = "бобы тонка",
                            Type = "middle"
                        },
                        new
                        {
                            Note_ID = 21u,
                            Name = "боярышник",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 22u,
                            Name = "брусника",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 23u,
                            Name = "бучу",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 24u,
                            Name = "ваниль",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 25u,
                            Name = "вербена",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 26u,
                            Name = "ветивер",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 27u,
                            Name = "виниловый",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 28u,
                            Name = "вино",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 29u,
                            Name = "вишня",
                            Type = "bottom"
                        },
                        new
                        {
                            Note_ID = 30u,
                            Name = "вода",
                            Type = "bottom"
                        });
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Price", b =>
                {
                    b.Property<uint>("Price_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("Product_ID")
                        .HasColumnType("int unsigned");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<uint>("Volume_ID")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("isActual")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Price_ID");

                    b.HasIndex("Product_ID");

                    b.HasIndex("Volume_ID");

                    b.ToTable("Prices", (string)null);

                    b.HasData(
                        new
                        {
                            Price_ID = 1u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6308),
                            Product_ID = 1u,
                            Value = 2235,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 2u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6318),
                            Product_ID = 1u,
                            Value = 4335,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 3u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6319),
                            Product_ID = 1u,
                            Value = 5435,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 4u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6320),
                            Product_ID = 1u,
                            Value = 7635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 5u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6321),
                            Product_ID = 1u,
                            Value = 9735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 6u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6323),
                            Product_ID = 2u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 7u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6323),
                            Product_ID = 2u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 8u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6324),
                            Product_ID = 2u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 9u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6325),
                            Product_ID = 2u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 10u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6326),
                            Product_ID = 2u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 11u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6326),
                            Product_ID = 3u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 12u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6327),
                            Product_ID = 3u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 13u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6328),
                            Product_ID = 3u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 14u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6329),
                            Product_ID = 3u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 15u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6330),
                            Product_ID = 3u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 16u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6331),
                            Product_ID = 4u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 17u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6332),
                            Product_ID = 4u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 18u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6332),
                            Product_ID = 4u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 19u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6333),
                            Product_ID = 4u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 20u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6336),
                            Product_ID = 4u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 21u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6337),
                            Product_ID = 5u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 22u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6338),
                            Product_ID = 5u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 23u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6339),
                            Product_ID = 5u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 24u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6339),
                            Product_ID = 5u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 25u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6340),
                            Product_ID = 5u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 26u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6341),
                            Product_ID = 6u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 27u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6342),
                            Product_ID = 6u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 28u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6342),
                            Product_ID = 6u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 29u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6343),
                            Product_ID = 6u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 30u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6344),
                            Product_ID = 6u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 31u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6344),
                            Product_ID = 7u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 32u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6345),
                            Product_ID = 7u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 33u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6346),
                            Product_ID = 7u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 34u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6347),
                            Product_ID = 7u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 35u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6347),
                            Product_ID = 7u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 36u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6349),
                            Product_ID = 8u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 37u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6349),
                            Product_ID = 8u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 38u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6350),
                            Product_ID = 8u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 39u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6351),
                            Product_ID = 8u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 40u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6393),
                            Product_ID = 8u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 41u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6394),
                            Product_ID = 9u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 42u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6394),
                            Product_ID = 9u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 43u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6395),
                            Product_ID = 9u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 44u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6396),
                            Product_ID = 9u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 45u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6397),
                            Product_ID = 9u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 46u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6397),
                            Product_ID = 10u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 47u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6398),
                            Product_ID = 10u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 48u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6399),
                            Product_ID = 10u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 49u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6400),
                            Product_ID = 10u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 50u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6400),
                            Product_ID = 10u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 51u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6401),
                            Product_ID = 11u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 52u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6402),
                            Product_ID = 11u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 53u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6403),
                            Product_ID = 11u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 54u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6403),
                            Product_ID = 11u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 55u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6404),
                            Product_ID = 11u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 56u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6405),
                            Product_ID = 12u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 57u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6406),
                            Product_ID = 12u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 58u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6407),
                            Product_ID = 12u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 59u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6408),
                            Product_ID = 12u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 60u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6408),
                            Product_ID = 12u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 61u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6409),
                            Product_ID = 13u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 62u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6410),
                            Product_ID = 13u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 63u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6411),
                            Product_ID = 13u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 64u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6414),
                            Product_ID = 13u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 65u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6415),
                            Product_ID = 13u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 66u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6415),
                            Product_ID = 14u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 67u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6416),
                            Product_ID = 14u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 68u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6417),
                            Product_ID = 14u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 69u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6418),
                            Product_ID = 14u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 70u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6419),
                            Product_ID = 14u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 71u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6420),
                            Product_ID = 15u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 72u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6420),
                            Product_ID = 15u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 73u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6421),
                            Product_ID = 15u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 74u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6422),
                            Product_ID = 15u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 75u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6422),
                            Product_ID = 15u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 76u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6423),
                            Product_ID = 16u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 77u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6424),
                            Product_ID = 16u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 78u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6425),
                            Product_ID = 16u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 79u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6426),
                            Product_ID = 16u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 80u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6427),
                            Product_ID = 16u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 81u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6427),
                            Product_ID = 17u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 82u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6428),
                            Product_ID = 17u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 83u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6429),
                            Product_ID = 17u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 84u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6429),
                            Product_ID = 17u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 85u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6430),
                            Product_ID = 17u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 86u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6431),
                            Product_ID = 18u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 87u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6432),
                            Product_ID = 18u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 88u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6433),
                            Product_ID = 18u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 89u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6434),
                            Product_ID = 18u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 90u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6435),
                            Product_ID = 18u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 91u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6435),
                            Product_ID = 19u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 92u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6436),
                            Product_ID = 19u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 93u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6437),
                            Product_ID = 19u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 94u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6437),
                            Product_ID = 19u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 95u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6438),
                            Product_ID = 19u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 96u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6439),
                            Product_ID = 20u,
                            Value = 2135,
                            Volume_ID = 1u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 97u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6440),
                            Product_ID = 20u,
                            Value = 4235,
                            Volume_ID = 2u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 98u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6441),
                            Product_ID = 20u,
                            Value = 4735,
                            Volume_ID = 3u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 99u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6441),
                            Product_ID = 20u,
                            Value = 6635,
                            Volume_ID = 4u,
                            isActual = true
                        },
                        new
                        {
                            Price_ID = 100u,
                            PriceDate = new DateTime(2023, 12, 6, 10, 37, 0, 950, DateTimeKind.Local).AddTicks(6442),
                            Product_ID = 20u,
                            Value = 8735,
                            Volume_ID = 5u,
                            isActual = true
                        });
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Product", b =>
                {
                    b.Property<uint>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Brand_ID")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Category_ID")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Product_ID");

                    b.HasIndex("Brand_ID");

                    b.HasIndex("Category_ID");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Product_ID = 1u,
                            Brand_ID = 1u,
                            Category_ID = 1u,
                            Country = "США",
                            Description = "Описание",
                            Name = "Product #1",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 2u,
                            Brand_ID = 2u,
                            Category_ID = 1u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #2",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 3u,
                            Brand_ID = 3u,
                            Category_ID = 1u,
                            Country = "Италия",
                            Description = "Описание",
                            Name = "Product #3",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 4u,
                            Brand_ID = 1u,
                            Category_ID = 1u,
                            Country = "США",
                            Description = "Описание",
                            Name = "Product #4",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 5u,
                            Brand_ID = 2u,
                            Category_ID = 1u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #5",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 6u,
                            Brand_ID = 3u,
                            Category_ID = 1u,
                            Country = "Италия",
                            Description = "Описание",
                            Name = "Product #6",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 7u,
                            Brand_ID = 1u,
                            Category_ID = 1u,
                            Country = "США",
                            Description = "Описание",
                            Name = "Product #7",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 8u,
                            Brand_ID = 2u,
                            Category_ID = 1u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #8",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 9u,
                            Brand_ID = 3u,
                            Category_ID = 1u,
                            Country = "Италия",
                            Description = "Описание",
                            Name = "Product #9",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 10u,
                            Brand_ID = 1u,
                            Category_ID = 1u,
                            Country = "США",
                            Description = "Описание",
                            Name = "Product #10",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 11u,
                            Brand_ID = 2u,
                            Category_ID = 1u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #11",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 12u,
                            Brand_ID = 3u,
                            Category_ID = 1u,
                            Country = "Италия",
                            Description = "Описание",
                            Name = "Product #12",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 13u,
                            Brand_ID = 4u,
                            Category_ID = 2u,
                            Country = "Оман",
                            Description = "Описание",
                            Name = "Product #13",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 14u,
                            Brand_ID = 5u,
                            Category_ID = 2u,
                            Country = "ОАЭ",
                            Description = "Описание",
                            Name = "Product #14",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 15u,
                            Brand_ID = 6u,
                            Category_ID = 2u,
                            Country = "Испания",
                            Description = "Описание",
                            Name = "Product #15",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 16u,
                            Brand_ID = 4u,
                            Category_ID = 2u,
                            Country = "Оман",
                            Description = "Описание",
                            Name = "Product #16",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 17u,
                            Brand_ID = 5u,
                            Category_ID = 2u,
                            Country = "ОАЭ",
                            Description = "Описание",
                            Name = "Product #17",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 18u,
                            Brand_ID = 6u,
                            Category_ID = 2u,
                            Country = "Испания",
                            Description = "Описание",
                            Name = "Product #18",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 19u,
                            Brand_ID = 4u,
                            Category_ID = 2u,
                            Country = "Оман",
                            Description = "Описание",
                            Name = "Product #19",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 20u,
                            Brand_ID = 5u,
                            Category_ID = 2u,
                            Country = "ОАЭ",
                            Description = "Описание",
                            Name = "Product #20",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 21u,
                            Brand_ID = 6u,
                            Category_ID = 2u,
                            Country = "Испания",
                            Description = "Описание",
                            Name = "Product #21",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 22u,
                            Brand_ID = 4u,
                            Category_ID = 2u,
                            Country = "Оман",
                            Description = "Описание",
                            Name = "Product #22",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 23u,
                            Brand_ID = 5u,
                            Category_ID = 2u,
                            Country = "ОАЭ",
                            Description = "Описание",
                            Name = "Product #23",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 24u,
                            Brand_ID = 6u,
                            Category_ID = 2u,
                            Country = "Испания",
                            Description = "Описание",
                            Name = "Product #24",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 25u,
                            Brand_ID = 7u,
                            Category_ID = 3u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #25",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 26u,
                            Brand_ID = 8u,
                            Category_ID = 3u,
                            Country = "США",
                            Description = "Описание",
                            Name = "Product #26",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 27u,
                            Brand_ID = 9u,
                            Category_ID = 3u,
                            Country = "ОАЭ",
                            Description = "Описание",
                            Name = "Product #27",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 28u,
                            Brand_ID = 7u,
                            Category_ID = 3u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #28",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 29u,
                            Brand_ID = 8u,
                            Category_ID = 3u,
                            Country = "США",
                            Description = "Описание",
                            Name = "Product #29",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 30u,
                            Brand_ID = 9u,
                            Category_ID = 3u,
                            Country = "ОАЭ",
                            Description = "Описание",
                            Name = "Product #30",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 31u,
                            Brand_ID = 7u,
                            Category_ID = 3u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #31",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 32u,
                            Brand_ID = 8u,
                            Category_ID = 3u,
                            Country = "США",
                            Description = "Описание",
                            Name = "Product #32",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 33u,
                            Brand_ID = 9u,
                            Category_ID = 3u,
                            Country = "ОАЭ",
                            Description = "Описание",
                            Name = "Product #33",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 34u,
                            Brand_ID = 7u,
                            Category_ID = 3u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #34",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 35u,
                            Brand_ID = 8u,
                            Category_ID = 3u,
                            Country = "США",
                            Description = "Описание",
                            Name = "Product #35",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 36u,
                            Brand_ID = 9u,
                            Category_ID = 3u,
                            Country = "ОАЭ",
                            Description = "Описание",
                            Name = "Product #36",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 37u,
                            Brand_ID = 10u,
                            Category_ID = 4u,
                            Country = "Италия",
                            Description = "Описание",
                            Name = "Product #37",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 38u,
                            Brand_ID = 11u,
                            Category_ID = 4u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #38",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 39u,
                            Brand_ID = 12u,
                            Category_ID = 4u,
                            Country = "Испания",
                            Description = "Описание",
                            Name = "Product #39",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 40u,
                            Brand_ID = 10u,
                            Category_ID = 4u,
                            Country = "Италия",
                            Description = "Описание",
                            Name = "Product #40",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 41u,
                            Brand_ID = 11u,
                            Category_ID = 4u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #41",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 42u,
                            Brand_ID = 12u,
                            Category_ID = 4u,
                            Country = "Испания",
                            Description = "Описание",
                            Name = "Product #42",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 43u,
                            Brand_ID = 10u,
                            Category_ID = 4u,
                            Country = "Италия",
                            Description = "Описание",
                            Name = "Product #43",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 44u,
                            Brand_ID = 11u,
                            Category_ID = 4u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #44",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 45u,
                            Brand_ID = 12u,
                            Category_ID = 4u,
                            Country = "Испания",
                            Description = "Описание",
                            Name = "Product #45",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 46u,
                            Brand_ID = 10u,
                            Category_ID = 4u,
                            Country = "Италия",
                            Description = "Описание",
                            Name = "Product #46",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 47u,
                            Brand_ID = 11u,
                            Category_ID = 4u,
                            Country = "Франция",
                            Description = "Описание",
                            Name = "Product #47",
                            Year = "2010"
                        },
                        new
                        {
                            Product_ID = 48u,
                            Brand_ID = 12u,
                            Category_ID = 4u,
                            Country = "Испания",
                            Description = "Описание",
                            Name = "Product #48",
                            Year = "2010"
                        });
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Profile", b =>
                {
                    b.Property<uint>("Profile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Firstname")
                        .HasColumnType("longtext");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("Middlename")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<uint>("User_ID")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("isFilled")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Profile_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Profiles", (string)null);
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Promocode", b =>
                {
                    b.Property<uint>("Promocode_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<int>("Circulation")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PromocodeBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsingQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isExpired")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Promocode_ID");

                    b.ToTable("Promocodes", (string)null);

                    b.HasData(
                        new
                        {
                            Promocode_ID = 1u,
                            Circulation = 300,
                            ExpirationDate = new DateTime(2024, 1, 5, 7, 37, 0, 951, DateTimeKind.Utc).AddTicks(45),
                            PromocodeBody = "TEST_PROMOCODE",
                            UsingQuantity = 99999,
                            Value = "10",
                            isExpired = false
                        });
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.RefreshToken", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DeviceData")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("User_ID")
                        .HasColumnType("int unsigned");

                    b.HasKey("Token");

                    b.HasIndex("User_ID");

                    b.ToTable("Tokens", (string)null);
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Volume", b =>
                {
                    b.Property<uint>("Volume_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Volume_ID");

                    b.ToTable("Volumes", (string)null);

                    b.HasData(
                        new
                        {
                            Volume_ID = 1u,
                            Value = 2
                        },
                        new
                        {
                            Volume_ID = 2u,
                            Value = 5
                        },
                        new
                        {
                            Volume_ID = 3u,
                            Value = 8
                        },
                        new
                        {
                            Volume_ID = 4u,
                            Value = 10
                        },
                        new
                        {
                            Volume_ID = 5u,
                            Value = 15
                        });
                });

            modelBuilder.Entity("ProductAromaGroups", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.AromaGroup", null)
                        .WithMany()
                        .HasForeignKey("AromaGroupsAromaGroup_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TonightPerfume.Domain.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProduct_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductNotes", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.PerfumeNote", null)
                        .WithMany()
                        .HasForeignKey("PerfumeNotesNote_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TonightPerfume.Domain.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProduct_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Adress", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("Profile_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.AtomizerColor", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.Volume", "Volume")
                        .WithMany()
                        .HasForeignKey("Volume_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volume");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Discount", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("Brand_ID");

                    b.HasOne("TonightPerfume.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_ID");

                    b.HasOne("TonightPerfume.Domain.Models.BaseUser", "User")
                        .WithMany()
                        .HasForeignKey("User_ID");

                    b.Navigation("Brand");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.OrderProduct", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("Order_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TonightPerfume.Domain.Models.Price", "Price")
                        .WithMany("OrderProducts")
                        .HasForeignKey("Price_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Price", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TonightPerfume.Domain.Models.Volume", "Volume")
                        .WithMany()
                        .HasForeignKey("Volume_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Volume");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Product", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("Brand_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TonightPerfume.Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Profile", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.BaseUser", "User")
                        .WithMany()
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.RefreshToken", b =>
                {
                    b.HasOne("TonightPerfume.Domain.Models.BaseUser", "User")
                        .WithMany()
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("TonightPerfume.Domain.Models.Price", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
